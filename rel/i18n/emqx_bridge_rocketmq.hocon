emqx_bridge_rocketmq {

config_enable.desc:
"""Enable or disable this bridge"""

config_enable.label:
"""Enable Or Disable Bridge"""

desc_config.desc:
"""Configuration for a RocketMQ bridge."""

desc_config.label:
"""RocketMQ Bridge Configuration"""

desc_name.desc:
"""Bridge name."""

desc_name.label:
"""Bridge Name"""

desc_type.desc:
"""The Bridge Type"""

desc_type.label:
"""Bridge Type"""

local_topic.desc:
"""The MQTT topic filter to be forwarded to RocketMQ. All MQTT `PUBLISH` messages with the topic
matching the `local_topic` will be forwarded.<br/>
NOTE: if the bridge is used as a rule action, `local_topic` should be left empty otherwise the messages will be duplicated."""

local_topic.label:
"""Local Topic"""

template.desc:
"""Template, the default value is empty. When this value is empty the whole message will be stored in the RocketMQ.<br>
            The template can be any valid string with placeholders, example:<br>
            - ${id}, ${username}, ${clientid}, ${timestamp}<br>
            - {"id" : ${id}, "username" : ${username}}"""

template.label:
"""Template"""

action_parameters.desc:
"""Action specific configuration."""

action_parameters.label:
"""Action"""

rocketmq_action.desc:
"""Configuration for RocketMQ Action"""

rocketmq_action.label:
"""RocketMQ Action Configuration"""

config_connector.desc:
"""Configuration for an RocketMQ Client."""

config_connector.label:
"""RocketMQ Client Configuration"""

strategy.desc:
"""Producer key dispatch strategy.  Possible values: `key_dispatch`, `roundrobin`.  The default is `roundrobin`."""

key.label:
"""Key"""
key.desc:
"""Value to use for message key.  Supports placeholders, e.g.: `${payload.key}`."""

tag.label:
"""Tag"""
tag.desc:
"""Value to use for message tag.  Supports placeholders, e.g.: `${payload.tag}`."""

}
