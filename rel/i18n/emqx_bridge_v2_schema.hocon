emqx_bridge_v2_schema {

desc_bridges_v2.desc:
"""Configuration for actions."""

desc_bridges_v2.label:
"""Action Configuration"""

desc_sources.desc:
"""Configuration for sources."""

desc_sources.label:
"""Source Configuration"""

mqtt_topic.desc:
"""MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system."""
mqtt_topic.label:
"""Source MQTT Topic"""

config_enable.desc:
"""Enable (true) or disable (false) this action."""
config_enable.label:
"""Enable or Disable"""

undefined_vars_as_null.desc:
"""When writing to databases, treat undefined variables as NULL.
When this option is enabled, if undefined variables (like ${var}) are used in templates, they will be replaced with "NULL" instead of the string "undefined". If this option is not enabled (default), the string "undefined" might be inserted.
This option should always be `true` if possible; the default value `false` is only to ensure backward compatibility."""

undefined_vars_as_null.label:
"""Undefined Vars as Null"""

  fallback_actions {
    label: "Fallback Actions"
    desc: """List of fallback actions that will be triggered if a query to this action fails."""
  }

  fallback_action_kind {
    label: "Kind"
    desc: """Fallback kind."""
  }

  fallback_action_reference {
    label: "Fallback Action"
    desc: """A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks."""
  }

  fallback_action_reference_type {
    label: "Type"
    desc: """Fallback Action type."""
  }

  fallback_action_reference_name {
    label: "Name"
    desc: """Fallback Action name."""
  }

  fallback_action_republish {
    label: "Republish"
    desc: """Republish fallback action.  Works the same way as the Republish rule action from Rule Engine."""
  }

}
